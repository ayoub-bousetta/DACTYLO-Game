{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.js","webpack:///./src/js/dom.js","webpack:///./src/js/functions.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","_js_functions_js__WEBPACK_IMPORTED_MODULE_0__","document","getElementById","timeleft","wordlenght","Gameon","Score","levelset","levelVar","noob","word","time","pro","wordsGenerate","Array","Init","getlevel","timerdown","getword","getinputvalue","switcher","this","checked","Gamerestart","level","timer","innerHTML","leveltext","charts","timerh","fetch","then","response","text","elements","split","length","push","Math","floor","random","wordtowrite","event","wordsinput","keyCode","CheckIfWin","GameonCheck","msg","score","finalscore","trim","refreshMe","setInterval","clearInterval"],"mappings":"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","file":"js/app.bandle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","import { Init } from '../js/functions.js';\r\n//execute init;\r\n\r\n\r\n\r\n\r\nwindow.addEventListener('load',Init)","let wordsinput=document.getElementById('wordsinput')\r\nconst timer=document.getElementById('timer')\r\nlet msg=document.getElementById('msg')\r\nconst score=document.getElementById('score')\r\nconst wordtowrite=document.getElementById('wordtowrite')\r\nconst finalscore=document.getElementById('finalscore')\r\n\r\nconst switcher=document.getElementById('switcher')\r\nconst leveltext=document.getElementById('leveltext')\r\n\r\nconst timerh=document.getElementById('timerh')\r\nconst charts=document.getElementById('charts')","import \"../js/dom.js\"\r\n\r\nlet timeleft;\r\nlet Gameon=true;\r\nlet Score = 0;\r\nlet wordlenght;\r\nlet timerHolder \r\nlet levelset='noob'\r\n\r\nconst levelVar={\r\n'noob':{'word':5,'time':20},\r\n'pro':{'word':10,'time':10}\r\n}\r\n\r\n//Init values\r\n\r\nconst wordsGenerate=Array()\r\n\r\n    \r\n\r\nexport const Init= ()=>{\r\n    \r\n\r\n   \r\n\r\n\r\n    //set Level\r\n    getlevel(levelset);\r\n\r\n\r\n\r\n    //Timer Down\r\n    timerdown();\r\n    \r\n  \r\n    //get the Word\r\n    getword();\r\n\r\n\r\n    //get input by user\r\n    getinputvalue();\r\n\r\n\r\n\r\n\r\n\r\n \r\n }\r\n\r\n\r\n switcher.addEventListener('change',Checkit)\r\n function Checkit(){\r\n    if(this.checked) {\r\n        levelset='pro'\r\n        Gamerestart()\r\n    } else{\r\n        levelset='noob'\r\n        Gamerestart()\r\n    }\r\n}\r\n\r\n const getlevel=(level)=>{\r\n\r\n    timeleft=levelVar[level].time;\r\n    wordlenght=levelVar[level].word;\r\n    timer.innerHTML=timeleft\r\n    leveltext.innerHTML=level\r\n    charts.innerHTML=wordlenght\r\n    timerh.innerHTML=levelVar[level].time\r\n   \r\n }\r\n\r\n\r\n//get the Word\r\n const getword=()=>{\r\n   fetch('https://raw.githubusercontent.com/AlexHakman/Java-challenge/master/words.txt')\r\n    .then(response => response.text())\r\n    .then((text)=>{\r\n        \r\n        const elements=text.split('\\n')\r\n\r\n      \r\n\r\n        for (let i = 0; i < elements.length; i++) {\r\n\r\n            \r\n         \r\n            if (elements[i].length <= wordlenght) {\r\n                wordsGenerate.push(elements[i])\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        const word = wordsGenerate[Math.floor(Math.random()*wordsGenerate.length)];\r\n        wordtowrite.innerHTML=word\r\n} )\r\n        \r\n\r\n    \r\n}\r\n\r\n const getinputvalue=(event)=>{\r\n\r\n    wordsinput.addEventListener(\"keyup\", (event)=>{\r\n\r\n        //Restart the game\r\n           \r\n       \r\n         if(event.keyCode === 13) {\r\n\r\n            if (timer.innerHTML==0) {\r\n                \r\n                Gamerestart()\r\n                timerdown()\r\n                CheckIfWin(wordsinput.value) \r\n              \r\n                \r\n            }else{\r\n                CheckIfWin(wordsinput.value) \r\n            }\r\n         \r\n         }\r\n\r\n    })\r\n   \r\n }\r\n\r\n\r\n const GameonCheck=()=>{\r\n     \r\n    if (Gameon==false) {\r\n        msg.innerHTML='Game over'\r\n     \r\n        score.innerHTML=0\r\n        timer.innerHTML=0\r\n        wordsinput.value=''\r\n        finalscore.innerHTML='Your finale score is:'+Score\r\n       \r\n        timeleft=0\r\n\r\n    }\r\n }\r\n\r\n\r\n\r\n const Gamerestart=()=>{\r\n\r\n        getlevel(levelset);\r\n        msg.innerHTML=''\r\n        score.innerHTML=0\r\n        finalscore.innerHTML=''\r\n        Gameon=true\r\n        Score=0\r\n       \r\n\r\n    \r\n }\r\n\r\n const CheckIfWin=(value)=> {\r\n\r\n    \r\n\r\n    if (wordtowrite.innerHTML.trim()==value.trim()) {\r\n        Score++\r\n        score.innerHTML=Score\r\n       \r\n        getlevel(levelset)\r\n        wordsinput.value=''\r\n        Gameon=true\r\n        getword()\r\n     \r\n        \r\n       \r\n\r\n    }else{\r\n       \r\n          Gameon=false;\r\n         GameonCheck()\r\n        \r\n    }\r\n     \r\n }\r\n\r\n const timerdown=()=> {\r\n    \r\n    \r\n\r\n    let refreshMe=setInterval(()=>{\r\n   \r\n\r\n        if(timeleft>0 && Gameon==true){\r\n            timeleft--\r\n           timer.innerHTML=timeleft\r\n\r\n          \r\n        }else{\r\n            Gameon=false;\r\n            clearInterval(refreshMe);\r\n            GameonCheck()\r\n            \r\n        }\r\n    }, 1000); \r\n        \r\n \r\n\r\n   \r\n    \r\n}\r\n\r\n\r\n"],"sourceRoot":""}